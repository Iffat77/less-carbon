{"ast":null,"code":"var _jsxFileName = \"/Users/iffathossain/iffatdev/projects/less-carbon/client/src/components/CreateComment.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createCommentForArticle } from \"../services/comments\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateComment(_ref) {\n  _s();\n  let {\n    id,\n    fetchNewComments\n  } = _ref;\n  const [comment, setComment] = useState({\n    content: \"\"\n  });\n  const [inputValue, setInputValue] = use;\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setComment({\n      ...comment,\n      [name]: value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log(id, comment);\n    await createCommentForArticle(id, comment);\n    console.log(\"submitted\");\n    if (fetchNewComments) {\n      await fetchNewComments();\n    }\n    setInputValue('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"CreateComment\", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Write a comment\",\n        name: \"content\",\n        value: comment.content,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateComment, \"XbjbjPbWuNS7AlxYk/oQLiRPyFQ=\");\n_c = CreateComment;\nexport default CreateComment;\nvar _c;\n$RefreshReg$(_c, \"CreateComment\");","map":{"version":3,"names":["useState","useNavigate","createCommentForArticle","jsxDEV","_jsxDEV","CreateComment","_ref","_s","id","fetchNewComments","comment","setComment","content","inputValue","setInputValue","use","handleChange","e","name","value","target","handleSubmit","preventDefault","console","log","children","onSubmit","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/iffathossain/iffatdev/projects/less-carbon/client/src/components/CreateComment.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { createCommentForArticle } from \"../services/comments\";\n\nfunction CreateComment({ id, fetchNewComments }) {\n  const [comment, setComment] = useState({\n    content: \"\",\n  });\n  const [inputValue, setInputValue] = use\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setComment({\n      ...comment,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(id, comment);\n    await createCommentForArticle(id, comment);\n    console.log(\"submitted\");\n    if (fetchNewComments) {\n      await fetchNewComments();\n    }\n    setInputValue('')\n  };\n\n  return (\n    <div>\n      CreateComment\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Write a comment\"\n          name=\"content\"\n          value={comment.content}\n          onChange={handleChange}\n        />\n        <button type=\"submit\">Add Comment</button>\n      </form>\n    </div>\n  );\n}\n\nexport default CreateComment;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,uBAAuB,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,SAASC,aAAaA,CAAAC,IAAA,EAA2B;EAAAC,EAAA;EAAA,IAA1B;IAAEC,EAAE;IAAEC;EAAiB,CAAC,GAAAH,IAAA;EAC7C,MAAM,CAACI,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC;IACrCY,OAAO,EAAE;EACX,CAAC,CAAC;EACF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGC,GAAG;EAEvC,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCT,UAAU,CAAC;MACT,GAAGD,OAAO;MACV,CAACQ,IAAI,GAAGC;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAAChB,EAAE,EAAEE,OAAO,CAAC;IACxB,MAAMR,uBAAuB,CAACM,EAAE,EAAEE,OAAO,CAAC;IAC1Ca,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxB,IAAIf,gBAAgB,EAAE;MACpB,MAAMA,gBAAgB,CAAC,CAAC;IAC1B;IACAK,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,oBACEV,OAAA;IAAAqB,QAAA,GAAK,eAEH,eAAArB,OAAA;MAAMsB,QAAQ,EAAEL,YAAa;MAAAI,QAAA,gBAC3BrB,OAAA;QACEuB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,iBAAiB;QAC7BV,IAAI,EAAC,SAAS;QACdC,KAAK,EAAET,OAAO,CAACE,OAAQ;QACvBiB,QAAQ,EAAEb;MAAa;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eACF7B,OAAA;QAAQuB,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAW;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC1B,EAAA,CAxCQF,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AA0CtB,eAAeA,aAAa;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}