{"ast":null,"code":"import axios from 'axios';\nimport api from \"./apiConfig\";\nconst baseUrl = 'http://localhost:8000/api/users'; // Replace with your backend authentication API endpoint\n\nconst authService = {\n  login: async (email, password) => {\n    console.log('logging in');\n    const response = await axios.post(`${baseUrl}/login`, {\n      email,\n      password\n    });\n    console.log(response.data);\n    return response.data.token;\n  },\n  register: async (name, email, password) => {\n    const response = await axios.post(`${baseUrl}`, {\n      name,\n      email,\n      password\n    });\n    return response.data.token;\n  },\n  logout: () => {\n    // Clear the token from local storage or cookies\n    // For example, if using localStorage:\n    localStorage.removeItem('token');\n  },\n  getUserData: async () => {\n    // Retrieve the token from storage\n    const token = localStorage.getItem('token');\n\n    // Create headers object with Authorization header\n    const headers = {\n      Authorization: `Bearer ${token}`\n    };\n    try {\n      // Make the GET request with the headers\n      const response = await axios.get(`${baseUrl}/me`, {\n        headers\n      });\n      return response.data;\n    } catch (error) {\n      // Handle error\n      throw error;\n    }\n  },\n  isAuthenticated: () => {\n    // Check if the user is authenticated (e.g., check the presence of a valid token)\n    // For example, if using localStorage:\n    const token = localStorage.getItem('token');\n    return !!token; // Return true if token exists, false otherwise\n  }\n};\n\nexport default authService;","map":{"version":3,"names":["axios","api","baseUrl","authService","login","email","password","console","log","response","post","data","token","register","name","logout","localStorage","removeItem","getUserData","getItem","headers","Authorization","get","error","isAuthenticated"],"sources":["/Users/iffathossain/iffatdev/projects/less-carbon/client/src/services/auth.js"],"sourcesContent":["import axios from 'axios';\nimport api from \"./apiConfig\";\n\nconst baseUrl = 'http://localhost:8000/api/users'; // Replace with your backend authentication API endpoint\n\nconst authService = {\n  login: async (email, password) => {\n    console.log('logging in')\n    const response = await axios.post(`${baseUrl}/login`, { email, password });\n    console.log(response.data)\n    return response.data.token;\n  },\n\n  register: async (name, email, password) => {\n    const response = await axios.post(`${baseUrl}`, { name, email, password });\n    return response.data.token;\n  },\n\n  logout: () => {\n    // Clear the token from local storage or cookies\n    // For example, if using localStorage:\n    localStorage.removeItem('token');\n  },\n\n  getUserData: async () => {\n    // Retrieve the token from storage\n    const token = localStorage.getItem('token');\n  \n    // Create headers object with Authorization header\n    const headers = {\n      Authorization: `Bearer ${token}`,\n    };\n  \n    try {\n      // Make the GET request with the headers\n      const response = await axios.get(`${baseUrl}/me`, { headers });\n      return response.data;\n    } catch (error) {\n      // Handle error\n      throw error;\n    }\n  },\n\n  isAuthenticated: () => {\n    // Check if the user is authenticated (e.g., check the presence of a valid token)\n    // For example, if using localStorage:\n    const token = localStorage.getItem('token');\n    return !!token; // Return true if token exists, false otherwise\n  },\n};\n\nexport default authService;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,aAAa;AAE7B,MAAMC,OAAO,GAAG,iCAAiC,CAAC,CAAC;;AAEnD,MAAMC,WAAW,GAAG;EAClBC,KAAK,EAAE,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IAChCC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IACzB,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAE,GAAER,OAAQ,QAAO,EAAE;MAAEG,KAAK;MAAEC;IAAS,CAAC,CAAC;IAC1EC,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACE,IAAI,CAAC;IAC1B,OAAOF,QAAQ,CAACE,IAAI,CAACC,KAAK;EAC5B,CAAC;EAEDC,QAAQ,EAAE,MAAAA,CAAOC,IAAI,EAAET,KAAK,EAAEC,QAAQ,KAAK;IACzC,MAAMG,QAAQ,GAAG,MAAMT,KAAK,CAACU,IAAI,CAAE,GAAER,OAAQ,EAAC,EAAE;MAAEY,IAAI;MAAET,KAAK;MAAEC;IAAS,CAAC,CAAC;IAC1E,OAAOG,QAAQ,CAACE,IAAI,CAACC,KAAK;EAC5B,CAAC;EAEDG,MAAM,EAAEA,CAAA,KAAM;IACZ;IACA;IACAC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;EAClC,CAAC;EAEDC,WAAW,EAAE,MAAAA,CAAA,KAAY;IACvB;IACA,MAAMN,KAAK,GAAGI,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;;IAE3C;IACA,MAAMC,OAAO,GAAG;MACdC,aAAa,EAAG,UAAST,KAAM;IACjC,CAAC;IAED,IAAI;MACF;MACA,MAAMH,QAAQ,GAAG,MAAMT,KAAK,CAACsB,GAAG,CAAE,GAAEpB,OAAQ,KAAI,EAAE;QAAEkB;MAAQ,CAAC,CAAC;MAC9D,OAAOX,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOY,KAAK,EAAE;MACd;MACA,MAAMA,KAAK;IACb;EACF,CAAC;EAEDC,eAAe,EAAEA,CAAA,KAAM;IACrB;IACA;IACA,MAAMZ,KAAK,GAAGI,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC;IAC3C,OAAO,CAAC,CAACP,KAAK,CAAC,CAAC;EAClB;AACF,CAAC;;AAED,eAAeT,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}