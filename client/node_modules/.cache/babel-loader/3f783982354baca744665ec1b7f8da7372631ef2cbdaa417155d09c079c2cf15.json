{"ast":null,"code":"var _jsxFileName = \"/Users/iffathossain/iffatdev/projects/less-carbon/client/src/screens/walls/Walls.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getWalls } from \"../../services/walls.js\";\nimport WallComp from \"../../components/wallComp.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Walls() {\n  _s();\n  const [walls, setWalls] = useState([]);\n  useEffect(() => {\n    const fetchWalls = async () => {\n      try {\n        const allWalls = await getWalls();\n        setWalls(allWalls);\n      } catch (error) {\n        console.error(\"Error fetching walls:\", error);\n      }\n    };\n    fetchWalls();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Walls\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), walls.map(wallData => /*#__PURE__*/_jsxDEV(WallComp, {\n      wall: wallData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Walls, \"HQUD5rjwkPlyw4reA56xfk3hMo0=\");\n_c = Walls;\nexport default Walls;\nvar _c;\n$RefreshReg$(_c, \"Walls\");","map":{"version":3,"names":["React","useState","useEffect","getWalls","WallComp","jsxDEV","_jsxDEV","Walls","_s","walls","setWalls","fetchWalls","allWalls","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","wallData","wall","_c","$RefreshReg$"],"sources":["/Users/iffathossain/iffatdev/projects/less-carbon/client/src/screens/walls/Walls.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getWalls } from \"../../services/walls.js\";\nimport WallComp from \"../../components/wallComp.jsx\";\n\nfunction Walls() {\n  const [walls, setWalls] = useState([]);\n\n  useEffect(() => {\n    const fetchWalls = async () => {\n      try {\n        const allWalls = await getWalls();\n        setWalls(allWalls);\n      } catch (error) {\n        console.error(\"Error fetching walls:\", error);\n      }\n    };\n\n    fetchWalls();\n  }, []);\n\n  return (\n    <div>\n      <h1>Walls</h1>\n      {walls.map((wallData) => (\n        <WallComp wall={wallData} />\n      ))}\n    </div>\n  );\n}\n\nexport default Walls;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,OAAOC,QAAQ,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMT,QAAQ,CAAC,CAAC;QACjCO,QAAQ,CAACE,QAAQ,CAAC;MACpB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDF,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACbV,KAAK,CAACW,GAAG,CAAEC,QAAQ,iBAClBf,OAAA,CAACF,QAAQ;MAACkB,IAAI,EAAED;IAAS;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC5B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACX,EAAA,CAxBQD,KAAK;AAAAgB,EAAA,GAALhB,KAAK;AA0Bd,eAAeA,KAAK;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}