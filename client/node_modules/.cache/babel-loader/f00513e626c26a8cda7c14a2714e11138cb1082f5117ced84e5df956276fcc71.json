{"ast":null,"code":"// import axios from 'axios';\n\n// const baseUrl = '/api/users'; // Replace with your backend authentication API endpoint\n\n// const authService = {\n//   login: async (email, password) => {\n//     const response = await axios.post(`${baseUrl}/login`, { email, password });\n//     return response.data.token;\n//   },\n\n//   register: async (name, email, password) => {\n//     const response = await axios.post(`${baseUrl}/register`, { name, email, password });\n//     return response.data.token;\n//   },\n\n//   logout: () => {\n//     // Clear the token from local storage or cookies\n//   },\n\n//   getUserData: async () => {\n//     const response = await axios.get(`${baseUrl}/user`);\n//     return response.data;\n//   },\n// };\n\n// export default authService;\n\nimport api from './apiConfig';\nconst baseUrl = '/api/users'; // Replace with your backend authentication API endpoint\n\nconst authService = {\n  login: async (email, password) => {\n    const response = await api.post(`${baseUrl}/login`, {\n      email,\n      password\n    });\n    return response.data.token;\n  },\n  register: async (name, email, password) => {\n    const response = await api.post(`${baseUrl}/register`, {\n      name,\n      email,\n      password\n    });\n    return response.data.token;\n  },\n  logout: () => {\n    // Clear the token from local storage or cookies\n  },\n  getUserData: async () => {\n    const response = await api.get(`${baseUrl}/user`);\n    return response.data;\n  }\n};\nexport default authService;","map":{"version":3,"names":["api","baseUrl","authService","login","email","password","response","post","data","token","register","name","logout","getUserData","get"],"sources":["/Users/iffathossain/iffatdev/projects/less-carbon/client/src/services/auth.js"],"sourcesContent":["// import axios from 'axios';\n\n// const baseUrl = '/api/users'; // Replace with your backend authentication API endpoint\n\n// const authService = {\n//   login: async (email, password) => {\n//     const response = await axios.post(`${baseUrl}/login`, { email, password });\n//     return response.data.token;\n//   },\n\n//   register: async (name, email, password) => {\n//     const response = await axios.post(`${baseUrl}/register`, { name, email, password });\n//     return response.data.token;\n//   },\n\n//   logout: () => {\n//     // Clear the token from local storage or cookies\n//   },\n\n//   getUserData: async () => {\n//     const response = await axios.get(`${baseUrl}/user`);\n//     return response.data;\n//   },\n// };\n\n// export default authService;\n\n\nimport api from './apiConfig';\n\nconst baseUrl = '/api/users'; // Replace with your backend authentication API endpoint\n\nconst authService = {\n  login: async (email, password) => {\n    const response = await api.post(`${baseUrl}/login`, { email, password });\n    return response.data.token;\n  },\n\n  register: async (name, email, password) => {\n    const response = await api.post(`${baseUrl}/register`, { name, email, password });\n    return response.data.token;\n  },\n\n  logout: () => {\n    // Clear the token from local storage or cookies\n  },\n\n  getUserData: async () => {\n    const response = await api.get(`${baseUrl}/user`);\n    return response.data;\n  },\n};\n\nexport default authService;\n"],"mappings":"AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,GAAG,MAAM,aAAa;AAE7B,MAAMC,OAAO,GAAG,YAAY,CAAC,CAAC;;AAE9B,MAAMC,WAAW,GAAG;EAClBC,KAAK,EAAE,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IAChC,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAE,GAAEN,OAAQ,QAAO,EAAE;MAAEG,KAAK;MAAEC;IAAS,CAAC,CAAC;IACxE,OAAOC,QAAQ,CAACE,IAAI,CAACC,KAAK;EAC5B,CAAC;EAEDC,QAAQ,EAAE,MAAAA,CAAOC,IAAI,EAAEP,KAAK,EAAEC,QAAQ,KAAK;IACzC,MAAMC,QAAQ,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAE,GAAEN,OAAQ,WAAU,EAAE;MAAEU,IAAI;MAAEP,KAAK;MAAEC;IAAS,CAAC,CAAC;IACjF,OAAOC,QAAQ,CAACE,IAAI,CAACC,KAAK;EAC5B,CAAC;EAEDG,MAAM,EAAEA,CAAA,KAAM;IACZ;EAAA,CACD;EAEDC,WAAW,EAAE,MAAAA,CAAA,KAAY;IACvB,MAAMP,QAAQ,GAAG,MAAMN,GAAG,CAACc,GAAG,CAAE,GAAEb,OAAQ,OAAM,CAAC;IACjD,OAAOK,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;AAED,eAAeN,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}